version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: simako-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: simako_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - simako-network

  # Flask Backend
  flask-backend:
    build:
      context: ./flask
      dockerfile: Dockerfile
    container_name: simako-flask
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      MONGO_URI: mongodb://admin:password@mongodb:27017/simako_db?authSource=admin
      DATABASE_NAME: simako_db
      FLASK_ENV: production
      FLASK_DEBUG: false
    depends_on:
      - mongodb
    networks:
      - simako-network

  # Node.js Backend
  nodejs-backend:
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    container_name: simako-nodejs
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      MONGO_URI: mongodb://admin:password@mongodb:27017/simako_db?authSource=admin
      NODE_ENV: production
      PORT: 3000
    depends_on:
      - mongodb
    networks:
      - simako-network

  # MongoDB Express (Web UI for MongoDB)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: simako-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - simako-network

networks:
  simako-network:
    driver: bridge

volumes:
  mongodb_data:
